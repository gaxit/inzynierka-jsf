package pl.rea.client.webmethods.offers;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OfferService", targetNamespace = "offers")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OfferService {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(action = "addOffer")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addOffer", targetNamespace = "offers", className = "offers.AddOffer")
    @ResponseWrapper(localName = "addOfferResponse", targetNamespace = "offers", className = "offers.AddOfferResponse")
    public boolean addOffer(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        OfferCanonical arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(action = "deleteOffer")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteOffer", targetNamespace = "offers", className = "offers.DeleteOffer")
    @ResponseWrapper(localName = "deleteOfferResponse", targetNamespace = "offers", className = "offers.DeleteOfferResponse")
    public boolean deleteOffer(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Long arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(action = "updateOffer")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateOffer", targetNamespace = "offers", className = "offers.UpdateOffer")
    @ResponseWrapper(localName = "updateOfferResponse", targetNamespace = "offers", className = "offers.UpdateOfferResponse")
    public boolean updateOffer(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        OfferCanonical arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg0
     * @return
     *     returns offers.OfferCanonical
     */
    @WebMethod(action = "getOffer")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOffer", targetNamespace = "offers", className = "offers.GetOffer")
    @ResponseWrapper(localName = "getOfferResponse", targetNamespace = "offers", className = "offers.GetOfferResponse")
    public OfferCanonical getOffer(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(action = "isOfferInUserFavourites")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isOfferInUserFavourites", targetNamespace = "offers", className = "offers.IsOfferInUserFavourites")
    @ResponseWrapper(localName = "isOfferInUserFavouritesResponse", targetNamespace = "offers", className = "offers.IsOfferInUserFavouritesResponse")
    public boolean isOfferInUserFavourites(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Long arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg5
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     * @return
     *     returns java.util.List<offers.OfferCanonical>
     */
    @WebMethod(action = "findOffersByCriteria")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findOffersByCriteria", targetNamespace = "offers", className = "offers.FindOffersByCriteria")
    @ResponseWrapper(localName = "findOffersByCriteriaResponse", targetNamespace = "offers", className = "offers.FindOffersByCriteriaResponse")
    public List<OfferCanonical> findOffersByCriteria(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Integer arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Integer arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        Integer arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        Integer arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        Integer arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        Boolean arg6,
        @WebParam(name = "arg7", targetNamespace = "")
        String arg7,
        @WebParam(name = "arg8", targetNamespace = "")
        String arg8,
        @WebParam(name = "arg9", targetNamespace = "")
        String arg9);

    /**
     * 
     * @return
     *     returns java.util.List<offers.OfferCanonical>
     */
    @WebMethod(action = "getAllOffers")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllOffers", targetNamespace = "offers", className = "offers.GetAllOffers")
    @ResponseWrapper(localName = "getAllOffersResponse", targetNamespace = "offers", className = "offers.GetAllOffersResponse")
    public List<OfferCanonical> getAllOffers();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(action = "deleteOfferFromUserFavourites")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteOfferFromUserFavourites", targetNamespace = "offers", className = "offers.DeleteOfferFromUserFavourites")
    @ResponseWrapper(localName = "deleteOfferFromUserFavouritesResponse", targetNamespace = "offers", className = "offers.DeleteOfferFromUserFavouritesResponse")
    public boolean deleteOfferFromUserFavourites(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Long arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<offers.OfferCanonical>
     */
    @WebMethod(action = "getUserOffers")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserOffers", targetNamespace = "offers", className = "offers.GetUserOffers")
    @ResponseWrapper(localName = "getUserOffersResponse", targetNamespace = "offers", className = "offers.GetUserOffersResponse")
    public List<OfferCanonical> getUserOffers(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(action = "addOfferToUserFavourites")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addOfferToUserFavourites", targetNamespace = "offers", className = "offers.AddOfferToUserFavourites")
    @ResponseWrapper(localName = "addOfferToUserFavouritesResponse", targetNamespace = "offers", className = "offers.AddOfferToUserFavouritesResponse")
    public boolean addOfferToUserFavourites(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Long arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<offers.OfferCanonical>
     */
    @WebMethod(action = "getUserFavouritesOffers")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserFavouritesOffers", targetNamespace = "offers", className = "offers.GetUserFavouritesOffers")
    @ResponseWrapper(localName = "getUserFavouritesOffersResponse", targetNamespace = "offers", className = "offers.GetUserFavouritesOffersResponse")
    public List<OfferCanonical> getUserFavouritesOffers(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

}
